{"version":3,"file":"static/webpack/static/development/pages/index.js.e75ae971b4e837d98dc1.hot-update.js","sources":["webpack:///./components/shapes.tsx"],"sourcesContent":["import React from 'react';\n\nconst colors = ['#ed6f4d', '#facaa5', '#71c3ad', '#4ca9e0', '#54899c', '#62b3e3', '#c6dcda'];\nconst shapeNames = ['line', 'square', 'circle'];\n\nconst makeRandomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst shapes = [];\n\nconst makeShapes = () => {\n  for (let i = 0; i < 25; i++) {\n    const shape = shapeNames[makeRandomInt(0, shapeNames.length - 1)];\n    shapes.push({\n      x: makeRandomInt(0, 100),\n      y: makeRandomInt(0, 100),\n      width: makeRandomInt(shape === 'line' ? 10 : 5, shape === 'line' ? 15 : 10),\n      rotate: makeRandomInt(0, 180),\n      color: colors[makeRandomInt(0, colors.length - 1)],\n      shape\n    });\n  }\n};\n\nmakeShapes();\n\nconst shapeStyles = ({ x, y, width, shape, rotate, color }) => ({\n  position: 'absolute' as const,\n  top: `${y}%`,\n  left: `${x}%`,\n  width: `${width}px`,\n  height: `${shape === 'line' ? '2' : width}px`,\n  opacity: 1 - y / 100,\n  transform: `rotate(${rotate}deg)`,\n  backgroundColor: shape === 'line' ? color : 'transparent',\n  borderColor: color,\n  border: shape === 'line' ? '' : `2px solid ${color}`,\n  borderRadius: shape === 'circle' ? '50%' : 0,\n  zIndex: -1\n});\n\nconst Shapes = () =>\n  console.log(shapes) && (\n    <>\n      {shapes.map((shape, i) => (\n        <React.Fragment key={`${shape.x}${shape.y}${shape.shape}`}>\n          <div style={shapeStyles(shape)} />\n          <div style={shapeStyles(shape)} />\n        </React.Fragment>\n      ))}\n    </>\n  );\n\nexport default Shapes;\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AACA;AAcA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAHA;AACA;AAWA;;;;A","sourceRoot":""}