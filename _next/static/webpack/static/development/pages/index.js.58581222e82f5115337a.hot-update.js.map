{"version":3,"file":"static/webpack/static/development/pages/index.js.58581222e82f5115337a.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport css from 'styled-jsx/css';\n\nconst colors = ['#ed6f4d', '#facaa5', '#71c3ad', '#4ca9e0', '#54899c', '#62b3e3', '#c6dcda'];\n\nconst makeRandomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst makeRandomFloat = (min: number, max: number) => {\n  return (Math.random() * (max - min + 1) + min).toFixed(1);\n};\n\nconst pickRandomItem = (items: any[]) => {\n  return items[Math.floor(Math.random() * items.length)];\n};\n\nconst dots = [];\n\nconst makeDots = () => {\n  for (let i = 0; i < 50; i++) {\n    dots.push({\n      x: makeRandomInt(0, 100),\n      y: makeRandomInt(0, 100),\n      width: makeRandomInt(10, 20),\n      rotate: makeRandomInt(0, 180),\n      color: colors[i % 6]\n    });\n  }\n};\n\nmakeDots();\n\nconst profilePictureStyle = css.resolve`\n  background: center/cover url(./static/profile_pic.jpeg);\n  clip-path: url(#clipPath);\n  width: 150px;\n  height: 170px;\n  display: inline-block;\n`;\n\nconst Home = () => (\n  <div>\n    <Head>\n      <title>Home</title>\n    </Head>\n    {dots.map(({ x, y, width, rotate, color }) => (\n      <React.Fragment key={`${x}${y}${color}`}>\n        <div\n          key={`${x}${y}${color}-top`}\n          style={{\n            position: 'absolute',\n            top: `${y}%`,\n            left: `${x}%`,\n            width: `${width}px`,\n            height: '2px',\n            opacity: 1 - y / 100,\n            transform: `rotate(${rotate}deg)`,\n            backgroundColor: color,\n            zIndex: -1\n          }}\n        />\n        <div\n          key={`${x}${y}${color}-bot`}\n          style={{\n            position: 'absolute',\n            bottom: `${y}%`,\n            right: `${x}%`,\n            width: `${width}px`,\n            height: '2px',\n            opacity: 1 - (1 - y / 100),\n            transform: `rotate(${rotate}deg)`,\n            backgroundColor: color,\n            zIndex: -1\n          }}\n        />\n      </React.Fragment>\n    ))}\n    {profilePictureStyle.styles}\n    <div className=\"hero\">\n      <section>\n        <h1>Bryce Kalow</h1>\n      </section>\n      <div className=\"profile-picture-container\">\n        <motion.div\n          initial={{ y: 10, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          whileHover={{ scale: 1.1 }}\n          className={profilePictureStyle.className}\n          aria-label=\"profile picture\"\n        />\n      </div>\n    </div>\n    <svg>\n      <defs>\n        <clipPath id=\"clipPath\">\n          <path\n            stroke=\"none\"\n            fill=\"white\"\n            d=\"M72 0.94337567297408a5 5 0 0 1 5 0l59.951905283833 34.613248654052a5 5 0 0 1 2.5 4.3301270189222l0 69.226497308104a5 5 0 0 1 -2.5 4.3301270189222l-59.951905283833 34.613248654052a5 5 0 0 1 -5 0l-59.951905283833 -34.613248654052a5 5 0 0 1 -2.5 -4.3301270189222l1.1025426070929e-13 -69.226497308104a5 5 0 0 1 2.5 -4.3301270189222\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n    <style jsx>{`\n      .hero {\n        max-width: 800px;\n        margin: 0 auto;\n        padding-top: 5em;\n        text-align: center;\n      }\n\n      h1 {\n        color: #34343e;\n        display: inline-block;\n        vertical-align: middle;\n        font-size: 3em;\n      }\n\n      h1::after {\n        content: '';\n        background-color: #ed6f4d;\n        height: 4px;\n        width: 60%;\n        display: block;\n        margin-top: 5px;\n      }\n\n      .profile-picture-container {\n        filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.1));\n        display: inline-block;\n        vertical-align: middle;\n        margin: 0 auto;\n      }\n\n      section {\n        background: white;\n        border-radius: 5px;\n        padding: 10px;\n        margin: 10px;\n        text-align: left;\n        display: inline-block;\n      }\n    `}</style>\n  </div>\n);\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtDA;AAAA;AAAA;AADA;AACA;AAyGA;;;;A","sourceRoot":""}